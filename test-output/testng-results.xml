<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-27T17:18:38 IST" name="Suite" finished-at="2024-03-27T17:19:13 IST" duration-ms="34343">
    <groups>
    </groups>
    <test started-at="2024-03-27T17:18:38 IST" name="Test" finished-at="2024-03-27T17:19:13 IST" duration-ms="34343">
      <class name="Testcripts.LoginTest">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:18:52 IST" name="launchApp" finished-at="2024-03-27T17:18:55 IST" duration-ms="2140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginWithoutCredentials()[pri:1, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:18:55 IST" name="loginWithoutCredentials" finished-at="2024-03-27T17:19:06 IST" duration-ms="10997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutCredentials -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:06 IST" name="closeApp" finished-at="2024-03-27T17:19:06 IST" duration-ms="221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:06 IST" name="launchApp" finished-at="2024-03-27T17:19:08 IST" duration-ms="2339" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginWithInvalidCredentials()[pri:2, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:08 IST" name="loginWithInvalidCredentials" finished-at="2024-03-27T17:19:09 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidCredentials -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:09 IST" name="closeApp" finished-at="2024-03-27T17:19:09 IST" duration-ms="219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:09 IST" name="launchApp" finished-at="2024-03-27T17:19:12 IST" duration-ms="2219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginWithValidCredentials()[pri:3, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:12 IST" name="loginWithValidCredentials" finished-at="2024-03-27T17:19:13 IST" duration-ms="969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.LoginTest@4007f65e]" started-at="2024-03-27T17:19:13 IST" name="closeApp" finished-at="2024-03-27T17:19:13 IST" duration-ms="181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- Testcripts.LoginTest -->
      <class name="Testcripts.RigisterTest">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:39 IST" name="launchApp" finished-at="2024-03-27T17:18:42 IST" duration-ms="3438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="rigister()[pri:1, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:42 IST" name="rigister" finished-at="2024-03-27T17:18:44 IST" duration-ms="1885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rigister -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:44 IST" name="closeApp" finished-at="2024-03-27T17:18:44 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:44 IST" name="launchApp" finished-at="2024-03-27T17:18:47 IST" duration-ms="2347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="registerWithoutPrivacyCheckBox()[pri:2, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:47 IST" name="registerWithoutPrivacyCheckBox" finished-at="2024-03-27T17:18:48 IST" duration-ms="1271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutPrivacyCheckBox -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:48 IST" name="closeApp" finished-at="2024-03-27T17:18:48 IST" duration-ms="244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="launchApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:48 IST" name="launchApp" finished-at="2024-03-27T17:18:51 IST" duration-ms="2334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="registerWithUsedEmail()[pri:3, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:51 IST" name="registerWithUsedEmail" finished-at="2024-03-27T17:18:52 IST" duration-ms="1376" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Warning: E-Mail Address is already registered!j] but found [Warning: E-Mail Address is already registered!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Warning: E-Mail Address is already registered!j] but found [Warning: E-Mail Address is already registered!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at Testcripts.RigisterTest.registerWithUsedEmail(RigisterTest.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithUsedEmail -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:Testcripts.RigisterTest@4fb3ee4e]" started-at="2024-03-27T17:18:52 IST" name="closeApp" finished-at="2024-03-27T17:18:52 IST" duration-ms="178" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
      </class> <!-- Testcripts.RigisterTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
